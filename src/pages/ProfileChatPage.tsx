import React, { useState, useEffect } from "react";
import { Card, Input, Button, Typography, Avatar } from "antd";
import { UserOutlined } from "@ant-design/icons";
import "./ProfileChatPage.css";

const { Text } = Typography;

type Message = {
  id: number;
  sender: "customer" | "rider";
  content: string;
  timestamp: string;
};

export default function ProfileChatPage() {
  const [messages, setMessages] = useState<Message[]>([]);
  const [newMessage, setNewMessage] = useState("");

  // ‡πÇ‡∏´‡∏•‡∏î mock data (‡∏†‡∏≤‡∏¢‡∏´‡∏•‡∏±‡∏á‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô fetch API)
  useEffect(() => {
    const mockMessages: Message[] = [
      { id: 1, sender: "rider", content: "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÑ‡∏õ‡∏£‡∏±‡∏ö‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏Ñ‡∏£‡∏±‡∏ö üö¥‚Äç‚ôÇÔ∏è", timestamp: "10:00" },
      { id: 2, sender: "customer", content: "‡πÇ‡∏≠‡πÄ‡∏Ñ‡∏Ñ‡∏£‡∏±‡∏ö ‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏°‡∏≤‡∏Å üôè", timestamp: "10:01" },
    ];
    setMessages(mockMessages);
  }, []);

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° (‡πÄ‡∏ú‡∏∑‡πà‡∏≠ backend)
  const sendMessage = () => {
    if (!newMessage.trim()) return;

    const newMsg: Message = {
      id: Date.now(),
      sender: "customer", // ‡∏™‡∏°‡∏°‡∏ï‡∏¥ user ‡∏Ñ‡∏∑‡∏≠ customer
      content: newMessage,
      timestamp: new Date().toLocaleTimeString(),
    };

    // update state (mock)
    setMessages((prev) => [...prev, newMsg]);
    setNewMessage("");

    // TODO: ‡∏†‡∏≤‡∏¢‡∏´‡∏•‡∏±‡∏á‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API ‡∏´‡∏£‡∏∑‡∏≠ socket.emit()
  };

  return (
    <Card title="‡πÅ‡∏ä‡∏ó‡∏Å‡∏±‡∏ö Rider" className="chat-card">
      {/* ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° */}
      <div className="chat-messages">
        {messages.map((msg) => (
          <div
            key={msg.id}
            className={`chat-bubble ${msg.sender === "customer" ? "me" : "other"}`}
          >
            <Avatar size="small" icon={<UserOutlined />} />
            <div className="chat-content">
              <Text>{msg.content}</Text>
              <div className="chat-time">{msg.timestamp}</div>
            </div>
          </div>
        ))}
      </div>

      {/* ‡∏Å‡∏•‡πà‡∏≠‡∏á‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° */}
      <div className="chat-input">
        <Input.TextArea
          value={newMessage}
          onChange={(e) => setNewMessage(e.target.value)}
          onPressEnter={sendMessage}
          placeholder="‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°..."
          autoSize={{ minRows: 1, maxRows: 3 }}
        />
        <Button type="primary" onClick={sendMessage}>
          ‡∏™‡πà‡∏á
        </Button>
      </div>
    </Card>
  );
}
