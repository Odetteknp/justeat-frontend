import React, { useEffect, useState } from "react";
import {
  Card,
  Row,
  Col,
  Spin,
  Button,
  Avatar,
  Typography,
  message,
  List,
  Space,
  Modal,
  Descriptions,
  Image,
} from "antd";
import {
  UserOutlined,
  CheckCircleOutlined,
  CloseCircleOutlined,
  EyeOutlined,
} from "@ant-design/icons";

const { Title, Text } = Typography;

type PendingRestaurant = {
  id: string;
  name: string;
  phone: string;
  description: string;
  restaurantType: string;
  address: string;
  openingTime: string;
  closingTime: string;
  logo?: string;
  submittedAt: string;

  ownerFirstName: string;
  ownerLastName: string;
  ownerEmail: string;
  ownerPhone: string;

  status: "pending" | "approved" | "rejected";
};

const AdminRestaurant: React.FC = () => {
  const [messageApi, contextHolder] = message.useMessage();
  const [loading, setLoading] = useState<boolean>(true);
  const [restaurants, setRestaurants] = useState<PendingRestaurant[]>([]);
  const [selectedRestaurant, setSelectedRestaurant] = useState<PendingRestaurant | null>(null);
  const [modalVisible, setModalVisible] = useState(false);

  // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏° mock data ‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•
  useEffect(() => {
    const mockData: PendingRestaurant[] = [
      {
        id: "1",
        name: "‡∏Ñ‡∏•‡∏≤‡∏¢‡∏´‡∏¥‡∏ß",
        phone: "0891234567",
        description: "‡∏£‡πâ‡∏≤‡∏ô‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏ä‡∏∑‡πà‡∏≠‡∏î‡∏±‡∏á ‡πÄ‡∏õ‡∏¥‡∏î‡∏°‡∏≤‡∏¢‡∏≤‡∏ß‡∏ô‡∏≤‡∏ô‡∏Å‡∏ß‡πà‡∏≤ 20 ‡∏õ‡∏µ",
        restaurantType: "Rice Dishes",
        address: "123/4 ‡∏ñ‡∏ô‡∏ô‡∏û‡∏£‡∏∞‡∏£‡∏≤‡∏° 2 ‡πÅ‡∏Ç‡∏ß‡∏á‡∏ö‡∏≤‡∏á‡∏°‡∏î ‡πÄ‡∏Ç‡∏ï‡∏à‡∏≠‡∏°‡∏ó‡∏≠‡∏á ‡∏Å‡∏ó‡∏°",
        openingTime: "08:00",
        closingTime: "18:00",
        logo: "https://via.placeholder.com/100",
        submittedAt: "2025-09-01",
        ownerFirstName: "‡∏Å‡∏ô‡∏Å‡∏û‡∏£",
        ownerLastName: "‡∏à‡∏≥‡∏õ‡∏≤‡∏´‡∏≠‡∏°",
        ownerEmail: "chaauay@example.com",
        ownerPhone: "0812345678",
        status: "pending",
      },
      {
        id: "2",
        name: "BB Bubble Tea",
        phone: "0912345678",
        description: "‡∏ä‡∏≤‡πÑ‡∏Ç‡πà‡∏°‡∏∏‡∏Å‡∏´‡∏≠‡∏°‡∏´‡∏ß‡∏≤‡∏ô ‡∏Å‡∏•‡∏°‡∏Å‡∏•‡πà‡∏≠‡∏° ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÑ‡∏Ç‡πà‡∏°‡∏∏‡∏Å‡∏´‡∏ô‡∏∂‡∏ö‡∏´‡∏ô‡∏±‡∏ö",
        restaurantType: "Bubble Tea",
        address: "88 ‡∏ã‡∏≠‡∏¢‡∏™‡∏∏‡∏Ç‡∏™‡∏±‡∏ô‡∏ï‡πå ‡πÅ‡∏Ç‡∏ß‡∏á‡∏•‡∏≤‡∏î‡∏û‡∏£‡πâ‡∏≤‡∏ß ‡πÄ‡∏Ç‡∏ï‡∏•‡∏≤‡∏î‡∏û‡∏£‡πâ‡∏≤‡∏ß ‡∏Å‡∏ó‡∏°",
        openingTime: "10:00",
        closingTime: "20:00",
        logo: "https://via.placeholder.com/100",
        submittedAt: "2025-09-02",
        ownerFirstName: "‡∏õ‡∏¥‡πà‡∏ô",
        ownerLastName: "‡∏û‡∏¥‡∏°‡∏û‡πå‡πÉ‡∏à",
        ownerEmail: "pinpimjai@example.com",
        ownerPhone: "0823456789",
        status: "pending",
      },
      {
        id: "3",
        name: "Healthy House",
        phone: "0923456789",
        description: "‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏Ñ‡∏•‡∏µ‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û ‡∏™‡∏î ‡∏™‡∏∞‡∏≠‡∏≤‡∏î ‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢",
        restaurantType: "Healthy",
        address: "55/7 ‡∏ñ‡∏ô‡∏ô‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û‡∏î‡∏µ ‡∏ï‡∏≥‡∏ö‡∏•‡πÉ‡∏ô‡πÄ‡∏°‡∏∑‡∏≠‡∏á ‡∏≠‡∏≥‡πÄ‡∏†‡∏≠‡πÄ‡∏°‡∏∑‡∏≠‡∏á ‡∏Ç‡∏≠‡∏ô‡πÅ‡∏Å‡πà‡∏ô",
        openingTime: "09:00",
        closingTime: "17:00",
        logo: "https://via.placeholder.com/100",
        submittedAt: "2025-09-03",
        ownerFirstName: "‡πÇ‡∏Å‡∏ß‡∏¥‡∏ó",
        ownerLastName: "‡∏†‡∏π‡∏≠‡πà‡∏≤‡∏á",
        ownerEmail: "kengky@example.com",
        ownerPhone: "0834567890",
        status: "pending",
      },
    ];

    // ‡∏à‡∏≥‡∏•‡∏≠‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    setTimeout(() => {
      setRestaurants(mockData);
      setLoading(false);
    }, 1000);
  }, []);

  const handleApprove = (id: string) => {
    setRestaurants((prev) =>
      prev.map((r) => (r.id === id ? { ...r, status: "approved" } : r))
    );
    messageApi.success("‚úÖ ‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡∏£‡πâ‡∏≤‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß");
    setModalVisible(false);
  };

  const handleReject = (id: string) => {
    setRestaurants((prev) =>
      prev.map((r) => (r.id === id ? { ...r, status: "rejected" } : r))
    );
    messageApi.error("‚ùå ‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò‡∏£‡πâ‡∏≤‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß");
    setModalVisible(false);
  };

  const showDetails = (restaurant: PendingRestaurant) => {
    setSelectedRestaurant(restaurant);
    setModalVisible(true);
  };

  const pendingRestaurants = restaurants.filter((r) => r.status === "pending");

  return (
    <div style={{ backgroundColor: "white", height: "100%", width: "100%", padding: 24 }}>
      {contextHolder}

      <Card
        style={{
          background: "rgb(239, 102, 75)",
          color: "white",
          marginBottom: 24,
          borderRadius: 16,
        }}
      >
        <Row align="middle" gutter={24}>
          <Col>
            <Avatar
              size={64}
              icon={<UserOutlined />}
              style={{ backgroundColor: "rgba(255, 255, 255, 0.2)" }}
            />
          </Col>

          <Col flex="1">
            <Title level={2} style={{ color: "white", margin: 0 }}>
              Admin üë®‚Äçüíº
            </Title>
            <Text style={{ color: "rgba(255, 255, 255, 0.9)", fontSize: 16 }}>
              ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡∏£‡πâ‡∏≤‡∏ô‡∏≠‡∏≤‡∏´‡∏≤‡∏£ 
            </Text>
          </Col>
        </Row>
      </Card>

      {loading ? (
        <div style={{ textAlign: "center", padding: "50px" }}>
          <Spin size="large" />
        </div>
      ) : pendingRestaurants.length === 0 ? (
        <Text>‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡πâ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡πÉ‡∏ô‡∏Ç‡∏ì‡∏∞‡∏ô‡∏µ‡πâ</Text>
      ) : (
        <List
          itemLayout="vertical"
          dataSource={pendingRestaurants}
          renderItem={(item) => (
            <Card
              style={{ marginBottom: 16 }}
              title={item.name}
              extra={<Text type="secondary">‡∏™‡πà‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠: {item.submittedAt}</Text>}
            >
              <Space direction="vertical" size="small">
                <Text>
                  ‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡∏£‡πâ‡∏≤‡∏ô: {item.ownerFirstName} {item.ownerLastName}
                </Text>
                <Button icon={<EyeOutlined />} onClick={() => showDetails(item)}>
                  ‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î
                </Button>
              </Space>
            </Card>
          )}
        />
      )}

      <Modal
        open={modalVisible}
        onCancel={() => setModalVisible(false)}
        footer={null}
        width={700}
        title="‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏£‡πâ‡∏≤‡∏ô‡∏≠‡∏≤‡∏´‡∏≤‡∏£"
      >
        {selectedRestaurant && (
          <>
            <Descriptions bordered column={1} size="middle">
              <Descriptions.Item label="‡∏ä‡∏∑‡πà‡∏≠‡∏£‡πâ‡∏≤‡∏ô">{selectedRestaurant.name}</Descriptions.Item>
              <Descriptions.Item label="‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢">{selectedRestaurant.description}</Descriptions.Item>
              <Descriptions.Item label="‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏£‡πâ‡∏≤‡∏ô">{selectedRestaurant.phone}</Descriptions.Item>
              <Descriptions.Item label="‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏≠‡∏≤‡∏´‡∏≤‡∏£">{selectedRestaurant.restaurantType}</Descriptions.Item>
              <Descriptions.Item label="‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏õ‡∏¥‡∏î - ‡∏õ‡∏¥‡∏î">
                {selectedRestaurant.openingTime} - {selectedRestaurant.closingTime}
              </Descriptions.Item>
              <Descriptions.Item label="‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà">{selectedRestaurant.address}</Descriptions.Item>
              <Descriptions.Item label="‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡∏£‡πâ‡∏≤‡∏ô">
                {selectedRestaurant.ownerFirstName} {selectedRestaurant.ownerLastName}
              </Descriptions.Item>
              <Descriptions.Item label="‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡∏£‡πâ‡∏≤‡∏ô">{selectedRestaurant.ownerEmail}</Descriptions.Item>
              <Descriptions.Item label="‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡∏£‡πâ‡∏≤‡∏ô">{selectedRestaurant.ownerPhone}</Descriptions.Item>
              <Descriptions.Item label="‡πÇ‡∏•‡πÇ‡∏Å‡πâ‡∏£‡πâ‡∏≤‡∏ô">
                <Image width={100} src={selectedRestaurant.logo} alt="‡πÇ‡∏•‡πÇ‡∏Å‡πâ‡∏£‡πâ‡∏≤‡∏ô" />
              </Descriptions.Item>
            </Descriptions>

            <div style={{ textAlign: "right", marginTop: 24 }}>
              <Button
                type="primary"
                icon={<CheckCircleOutlined />}
                onClick={() => handleApprove(selectedRestaurant.id)}
                style={{ marginRight: 8 }}
              >
                ‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥
              </Button>
              <Button
                danger
                icon={<CloseCircleOutlined />}
                onClick={() => handleReject(selectedRestaurant.id)}
              >
                ‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò
              </Button>
            </div>
          </>
        )}
      </Modal>
    </div>
  );
};

export default AdminRestaurant;
