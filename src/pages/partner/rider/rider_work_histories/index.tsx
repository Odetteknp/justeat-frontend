import React, { useEffect, useState } from "react";
import {
  Card,
  Row,
  Col,
  Spin,
  Button,
  Avatar,
  Typography,
  message,
} from "antd";

import {
  UserOutlined,
  PlayCircleOutlined,
  PauseCircleOutlined,
} from "@ant-design/icons";

const { Title, Text } = Typography;

const RiderWorkHistories: React.FC = () => {

  const [loading, setLoading] = useState(true);
  const [collapsed, setCollapsed] = useState(false);
  const [isWorking, setIsWorking] = useState(false); // << ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ó‡∏≥‡∏á‡∏≤‡∏ô
  const [messageApi, contextHolder] = message.useMessage();
  
  const handleToggleWorking = () => {
    if (isWorking) {
      // ‡∏à‡∏≤‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ó‡∏≥‡∏á‡∏≤‡∏ô -> ‡∏´‡∏¢‡∏∏‡∏î‡∏ó‡∏≥‡∏á‡∏≤‡∏ô
      setIsWorking(false);
      messageApi.warning("‡πÄ‡∏î‡πÇ‡∏° UI: ‡∏õ‡∏∏‡πà‡∏°‡∏´‡∏¢‡∏∏‡∏î‡∏ó‡∏≥‡∏á‡∏≤‡∏ô ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•(‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•)");
    } else {
      // ‡∏à‡∏≤‡∏Å‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô -> ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏≥‡∏á‡∏≤‡∏ô
      setIsWorking(true);
      messageApi.success("‡πÄ‡∏î‡πÇ‡∏° UI: ‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏≥‡∏á‡∏≤‡∏ô ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•(‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•)");
    }
  };

  //‡πÉ‡∏™‡πà‡πÑ‡∏ß‡πâ‡πÄ‡∏ú‡∏∑‡πà‡∏≠‡∏ï‡πâ‡∏≠‡∏á‡πÇ‡∏´‡∏•‡∏î Backend ‡∏´‡∏£‡∏∑‡∏≠‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏∑‡πà‡∏ô ‡πÜ ‡∏à‡∏∞‡πÑ‡∏î‡πâ Spin ‡∏´‡∏°‡∏∏‡∏ô‡∏£‡∏≠
  /*if (loading) {
    return (
      <div style={{ textAlign: "center", padding: "50px" }}>
        <Spin size="large" />
      </div>
    );
  }*/

  return (

    <div
      style={{
        backgroundColor: "white",
        height: "100%",   // ‡∏Å‡∏¥‡∏ô‡πÄ‡∏ï‡πá‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏π‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠
        width: "100%",        // ‡∏Å‡∏¥‡∏ô‡πÄ‡∏ï‡πá‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏ß‡πâ‡∏≤‡∏á
      }}
    >

      {/* ‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏™‡πà‡πÑ‡∏ß‡πâ‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ message ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ */}
      {contextHolder}

      <Card
        style={{
          background: "rgb(54, 164, 197)",
          color: "white",
          marginBottom: 24,
          borderRadius: 16,
        }}
      >
        <Row align="middle" gutter={24}>
          <Col>
            <Avatar
              size={64}
              icon={<UserOutlined />}
              style={{ backgroundColor: "rgba(255, 255, 255, 0.2)" }}
            />
          </Col>

          <Col flex="1">
            <Title level={1} style={{ color: "white", margin: 0 }}>
              ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏™‡πà‡∏á, {/*{username}*/}! üéµ                                        {/*‡πÄ‡∏≠‡∏≤‡∏ä‡∏∑‡πà‡∏≠ rider ‡∏°‡∏≤‡πÉ‡∏™‡πà‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ‡∏î‡πâ‡∏ß‡∏¢*/}
            </Title>
            <Text style={{ color: "rgba(255, 255, 255, 0.9)", fontSize: 20 }}>
              ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà! üöÄ {/*{isWorking ? "‡∏´‡∏¢‡∏∏‡∏î‡∏ó‡∏≥‡∏á‡∏≤‡∏ô" : "‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏≥‡∏á‡∏≤‡∏ô"}*/}
            </Text>
          </Col>
          <Col>
            <Button
              onClick={handleToggleWorking}
              type="primary"
              size="large"
              icon={isWorking ? <PauseCircleOutlined /> : <PlayCircleOutlined />}
              style={{
                fontSize: 18,
                background: isWorking ? "rgb(232, 81, 81)" : "rgb(64, 212, 106)",
                border: "1px solid rgba(255, 255, 255, 0.3)",
                borderRadius: 8,
                marginRight: 16,
              }}
              className="start-working-button"
            >
              {isWorking ? "‡∏´‡∏¢‡∏∏‡∏î‡∏ó‡∏≥‡∏á‡∏≤‡∏ô" : "‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏≥‡∏á‡∏≤‡∏ô"}
            </Button>
          </Col>
        </Row>
      </Card>
      <p>‡∏´‡∏ô‡πâ‡∏≤‡∏ô‡∏µ‡πâ‡πÄ‡∏õ‡πá‡∏ô ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏™‡πà‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î ‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á‡∏™‡∏µ‡∏Ç‡∏≤‡∏ß‡πÄ‡∏ï‡πá‡∏°‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠</p>
    </div>
  );
};

export default RiderWorkHistories;
